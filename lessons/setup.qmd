---
title: "Setup"
format: html
editor: visual
---

```{r}
#| include: false
classroom_organization <- 'data-explorers-feb-2025'
classroom_repos <- paste0('https://github.com/orgs/', classroom_organization, '/repositories')
```

This workshop use GitHub to host and run the code, data, software, and infrastructure needed for the workshop. Attendees will not need to install stuff on their own computer; everything is available online using GitHub.

If you are interested in installing all the software, data, and code on your computer, visit the [Setup - local page](setup-local.qmd)

## Initial Setup

It will take about ten minutes to set things up on Github.

[GitHub](https://github.com) is an online platform that lets people store, manage, and share their code. Github uses version control software called [Git](https://git-scm.com/) that keeps track of changes for all files inside a folder. We call a folder that uses Git to track changes a repository.

[GitHub Codespaces](https://github.com/features/codespaces) provide an online development environment where people can run their code without installing stuff on their computer.

[GitHub Classroom](https://classroom.github.com) is a tool that teachers can use to share, manage, and grade assignments.

[RStudio](https://posit.co/products/open-source/rstudio/) is a software application to write and run R code.

[Visual Studio Code](https://code.visualstudio.com) is a software application to write and run code in a variety of languages.

### Create Github account

If you don't have a Github account, create an account.

1.  Sign up for a [GitHub](https://github.com) account.
2.  After you login, update your settings.
3.  Go to [Emails settings](https://github.com/settings/emails).
    1.  Select 'Keep my email addresses private'. 'Block command line pushes that expose my email' should also be automatically selected.
4.  Optional. Go to [Password and authentication settings](https://github.com/settings/security).
    1.  If needed, setup Passkey or two-factor authentication.

### Setup Github Classroom and Codespaces

To access the files needed for the workshop, join the After iNaturalist Github Classroom.

1.  Click on the invitation link for After iNaturalist classroom that we emailed to you.

2.  You will see a "Accept the assignment" page. Click "Accept this assignment" button.

This will create a repository in GitHub with code and data for the workshop. The repository will be created in [`{r} classroom_organization`](%60%7Br%7D%20classroom_repos%60) Github account. You will save your work to this repository. Only you and the workshop organizers can access your repository.

![](images/setup/accept-assignment.png)

3.  You will see a "You're ready to go!" page. Copy the link for your repository and save it somewhere on your computer. This is how you will access your repository on subsequent visits. Click "Open in GitHub Codespaces" button.

    This will set up an online development environment where you can write and run code.

    ![](images/setup/open-codespace.png)

4.  You will see page with "Setting up remote connection: Building codespace..." message in the corner. The software for the workshop is being downloaded and installed. This will take about 5 minutes.

    This is Visual Studio Code, the default code editor for GitHub Codespaces. We want to use RStudio as our code editor.

![](images/setup/building-codespace.png)

5.  Once the Codespace if finished building, click on the "PORTS" tab at the bottom.

    ![](images/setup/finish-building.png)

6.  In the PORTS tab, hover over the item named RStudio. Click on the middle globe icon to start RStudio in a new browser tab.

    ![](images/setup/rstudio-port.png)

7.  Now you are ready to write and run R code using RStudio.

    ![](images/setup/rstudio.png)

You are done setting up Github. If you have problems, please email us.

## Restart a Codespace

After the initial setup of a Codespace, you can restart an existing Codespace.

1.  Go to [`{r} classroom_organization`](%60%7Br%7D%20classroom_repos%60) Github page, and you should see your repository. Click on your repository.

2.  Scroll to the bottom of the page, and click the "Open in GitHub Codespaces" button. This will restart the Codespace created in the "Setup Github Classroom and Codespaces" section.

    ![](images/setup/repo-open-codespace.png)

3.  Once the Codespace has started, click on the "PORTS" tab at the bottom.

    ![](images/setup/finish-building.png)

4.  In the PORTS tab, hover over the item named RStudio. Click on the middle globe icon to start RStudio in a new browser tab.

![](images/setup/rstudio-port.png)

5.   If you don't use Codespace for a while, Codespace will automatically stop due to inactivity. By default, Codespace expect people to use Visual Studio Code as the editor. We want to use RStudio. Since Visual Studio Code isn't being used, Codespace thinks we are being inactive, and will stop the Codespace after 30 minutes. We need to trick Codespace into thinking we are using Visual Studio Code. We created a script using Python programming language that prints a message every 5 minutes. We run this script in Visual Studio Code to fake some activity. To run the script, we type `python3 timer.py` in the Terminal and hit enter/return.

![](images/setup/python_timer.png)

The script will start and show a message.

![](images/setup/python_timer_start.png)

To stop the script, use <kbd>ctrl + c</kbd>.

### Codespace stopped due to inactivity

If you don't use Codespace for a while, Codespace will automatically stop. When you run some R code, you will see this error message in RStudio console:

![](images/codespace-stop/Codespace-stopped-Rstudio.png)

You will also see "Codespace is stopped" on Visual Studio Code page.

![](images/codespace-stop/Codespace-stopped.png){width="423"}

Click "Restart codespace" button to restart Codespace. Then click "PORTS", and the middle globe icon for RStudio to restart RStudio.

## Stop a Codespace

After you finish your work for the day, you need to stop R and stop Codespace.

To stop R, click the round orange circle in the upper right corner of RStudio

![](images/setup/stop_R.png)

To stop Codespace, click the blue area in the lower left corner of Visual Studio Code.

![](images/setup/vscode.png)

A popup window will appear. Select "Stop Current Codespace".

![](images/setup/stop_codespace.png)
