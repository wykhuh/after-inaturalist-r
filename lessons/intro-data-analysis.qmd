---
title: "Introduction to Data Analysis"
format: html
---

::: summary
## Questions

-   How do we begin to analyze iNaturalist data?

## Objectives

-   Learn how to download data from iNaturalist
-   Learn about the various ways to analyze data
:::

## iNaturalist data

When iNaturalist users add an observation through the iNaturalist app, that data is saved to the iNaturalist database. People can download the iNaturalist data as CSVs.

::: callout-note
**CSV comma-separated values**

CSV is a text file format for tabular data. Each line represents one record. Each column represents a field. The fields are separated by commas. CSVs can be opened in text editors or spreadsheet programs.

CSV as plain text file.

![](images/csv_text.png){alt="screenshot of a CSV plain text file."}

CSV in CSV or spreadsheet application.

![](images/csv_software.png){alt="screenshot of a CSV in a CSV program."}
:::

The iNaturalist CSV has information about:

-   the user who made observation
-   the location of the observation
-   the observed species
-   links for photos, videos, sounds

## Downloading iNaturalist data

Here's a video showing how to download iNaturalist data.

<iframe width="560" height="315" src="https://www.youtube.com/embed/wBH7RZAklYU?si=ggo4eHQGKHcq9D1G&amp;controls=0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen>

</iframe>

To save time and ensure everyone at the workshop has the same data, a CSV with data from iNaturalist City Nature Challenge Los Angeles from 2013 to 2024 is provided `data/cleaned/cnc-los-angeles-observations.csv`.

If you would like to download iNaturalist data for your own project, here's more info.

[How to Search iNaturalist Observations](https://help.inaturalist.org/en/support/solutions/articles/151000169670)

[How can I download data from iNaturalist?](https://help.inaturalist.org/en/support/solutions/articles/151000170342-how-can-i-download-data-from-inaturalist)

## Analyzing data

It is difficult for people to see any patterns when reading rows after row of text. To make it easier to see patterns, we can use software to analyze tabular data.

1)  Spreadsheet programs are computer application that people can use to view, edit, and analyze tabular data. The programs can do calculations and create charts. Examples include Excel and Google Sheets

2)  Geographic information system (GIS) are computer application that people can use to view, edit and analyze geographic data. The programs can do calculations and create maps. Examples include ArcGIS and QGIS.

3)  Programming languages allow people to write instructions to tell a computer to do stuff. We can write code to do calculations, create charts, and create maps. Example programming languages include R, Python, C.

This class uses R because it is a popular language in ecology research and other types of scientific research.

## Example of analyzing iNaturalist data using R

Here's an overview of what we learn in this workshop.

Load software that will will need.

```{r, load_packages}
#| error: false
#| warning: false
#| message: false

library(readr) # read and write tabular data
library(dplyr) # manipulate data
library(ggplot2) # create data visualizations
library(sf) # handle geospatial data
library(lubridate) # manipulate dates
library(mapview) # create interactive maps

```

Load iNaturalist data from City Nature Challenge Los Angeles 2013-2024. There are over 191,000 observations.

```{r, load_inat_csv}
#| error: false
#| warning: false
#| message: false
#| cache: true

inat <- read_csv("data/cleaned/cnc-los-angeles-observations.csv")
```

Create summaries of the data. For instance, get the 10 most commonly observed 'species'.

```{r, top_ten_species}

top_10 <- inat %>% 
  select(common_name, scientific_name) %>% 
  count(common_name, scientific_name, name='count')  %>%
  arrange(desc(count)) %>% 
  slice(1:10) 

top_10
```

Create charts. For example, create a bar chart showing the number of observations per year.

```{r, chart_observations_per_year}

inat %>% 
  mutate(year = year(observed_on))  %>%
  group_by(year) %>% 
  ggplot(aes(x = year)) +
  geom_bar()

```

Create maps. For example, create a map showing all the observations for Western Fence Lizard

```{r, map_of_western_fence_lizard}
#| cache: true

lizard <- inat %>% 
  st_as_sf(coords = c("longitude", "latitude"),   crs = 4326, remove=FALSE) %>% 
  select(id, user_login, common_name, scientific_name, observed_on,  url, longitude, latitude, geometry) %>% 
  filter(common_name == 'Western Fence Lizard')


mapview(lizard)
```
