---
title: "Introduction to Data Analysis"
format: html
editor: visual
---

::: summary
## Questions

-   How do we begin to analyze iNaturalist data?

## Objectives

-   Learn how to download data from iNaturalist.
-   Learn about the different ways to analyze tabular data.
-   Get an overview of the workshop.
:::

## iNaturalist data

When iNaturalist users add an observation through the iNaturalist app, that data is saved to the iNaturalist database. People can download the iNaturalist data as CSVs.

::: callout-note
**CSV comma-separated values**

CSV is a text file format for tabular data. Each line represents one record. Each column represents a field. The fields are separated by commas. CSVs can be opened in text editors or spreadsheet programs.

CSV as plain text file.

![](images/csv_text.png){alt="screenshot of a CSV plain text file."}

CSV in CSV or spreadsheet application.

![](images/csv_software.png){alt="screenshot of a CSV in a CSV program."}
:::

The iNaturalist CSV has information about:

-   the user who made observation
-   the location of the observation
-   the observed species
-   links for photos, videos, sounds

Here's a rough draft that lists [descriptions for each field](https://docs.google.com/spreadsheets/d/1mrRY_sy8MmGmwzoNSexahHC54e3q-ZAy1vJl_FIsKrY/edit?gid=0#gid=0).

## Downloading iNaturalist data

If you would like to download iNaturalist data, here's some info.

<iframe width="560" height="315" src="https://www.youtube.com/embed/wBH7RZAklYU?si=ggo4eHQGKHcq9D1G&amp;controls=0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen>

</iframe>

[How to Search iNaturalist Observations](https://help.inaturalist.org/en/support/solutions/articles/151000169670)

[step-by-step to download iNaturalist data](https://gsmit.org/wp-content/uploads/2021/04/inaturalist_data_walkthrough.pdf)

To save time and ensure everyone at the workshop has the same data, we provide a CSV with data from iNaturalist City Nature Challenge Los Angeles from 2013 to 2024. We made some changes to the CSVs we downloaded from iNaturalist, and the code we used edit the CSV is available [here](cleaning-data.qmd)

## Analyzing data using R

It is difficult for people to see any patterns when reading rows after row of text. To make it easier to see patterns, we can use software to analyze tabular data.

There are various tools to analyze tabular data including spreadsheets applications like Excel and Google Sheets, and programming languages such as R and Python. If the data has location information, Geographic Information Systems (GIS) such ArcGIS and QGIS can be used.

In this workshop we will use R programming language to analyze iNaturalist data. Programming languages allow people to write instructions to tell a computer to do stuff. The reason we are using R is because R is a popular language in ecology research.

## Workshop overview

Here's an overview of what we learn in this workshop.

Load software that will will need.

```{r, load_packages}
#| error: false
#| warning: false
#| message: false

library(readr) # read and write tabular data
library(dplyr) # manipulate data
library(ggplot2) # create data visualizations
library(sf) # handle vector geospatial data
library(lubridate) # manipulate dates
library(mapview) # create interactive maps

```

Load iNaturalist data from City Nature Challenge Los Angeles 2013-2024. There are over 191,000 observations.

```{r, load_inat_csv}
#| error: false
#| warning: false
#| message: false

inat <- read_csv("data/cleaned/cnc-los-angeles-observations.csv")
```

Create summaries of the data. For instance, get the 10 most commonly observed 'species'.

```{r, top_ten_species}

top_10 <- inat %>%
  select(common_name, scientific_name) %>%
  count(common_name, scientific_name, name='count')  %>%
  arrange(desc(count)) %>%
  slice(1:10)

top_10
```

Create maps. For example, create a map showing all the observations for Western Fence Lizard

```{r, map_of_western_fence_lizard}
#| eval: false

lizard <- inat %>%
  st_as_sf(coords = c("longitude", "latitude"),   crs = 4326, remove=FALSE) %>%
  select(id, user_login, common_name, scientific_name, observed_on,  url, longitude, latitude, geometry) %>%
  filter(common_name == 'Western Fence Lizard')


mapview(lizard)
```

![](images/mapview/intro-data-analysis/map_of_western_fence_lizard.png){alt="map of western fence lizard"}

Create charts. For example, create a bar chart showing the number of observations per year.

```{r, chart_observations_per_year}

inat %>%
  mutate(year = year(observed_on))  %>%
  group_by(year) %>%
  ggplot(aes(x = year)) +
  geom_bar()

```

